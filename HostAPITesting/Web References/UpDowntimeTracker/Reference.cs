//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HostAPITesting.UpDowntimeTracker {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TaskServiceSoap", Namespace="http://www.host-tracker.com/Services")]
    public partial class TaskService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthHeader authHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetTaskTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskIntervalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTasksByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTasksByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTasksByFilterOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TaskService() {
            this.Url = global::HostAPITesting.Properties.Settings.Default.HostAPITesting_UpDowntimeTracker_TaskService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthHeader AuthHeaderValue {
            get {
                return this.authHeaderValueField;
            }
            set {
                this.authHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTaskTypesCompletedEventHandler GetTaskTypesCompleted;
        
        /// <remarks/>
        public event GetTaskIntervalsCompletedEventHandler GetTaskIntervalsCompleted;
        
        /// <remarks/>
        public event GetTasksCompletedEventHandler GetTasksCompleted;
        
        /// <remarks/>
        public event GetTaskCompletedEventHandler GetTaskCompleted;
        
        /// <remarks/>
        public event GetTasksByFilterCompletedEventHandler GetTasksByFilterCompleted;
        
        /// <remarks/>
        public event CreateTaskCompletedEventHandler CreateTaskCompleted;
        
        /// <remarks/>
        public event CreateTasksCompletedEventHandler CreateTasksCompleted;
        
        /// <remarks/>
        public event UpdateTasksByFilterCompletedEventHandler UpdateTasksByFilterCompleted;
        
        /// <remarks/>
        public event UpdateTaskCompletedEventHandler UpdateTaskCompleted;
        
        /// <remarks/>
        public event UpdateTasksCompletedEventHandler UpdateTasksCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event DeleteTasksCompletedEventHandler DeleteTasksCompleted;
        
        /// <remarks/>
        public event DeleteTasksByFilterCompletedEventHandler DeleteTasksByFilterCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/GetTaskTypes", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTaskTypes() {
            object[] results = this.Invoke("GetTaskTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskTypesAsync() {
            this.GetTaskTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetTaskTypesAsync(object userState) {
            if ((this.GetTaskTypesOperationCompleted == null)) {
                this.GetTaskTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskTypesOperationCompleted);
            }
            this.InvokeAsync("GetTaskTypes", new object[0], this.GetTaskTypesOperationCompleted, userState);
        }
        
        private void OnGetTaskTypesOperationCompleted(object arg) {
            if ((this.GetTaskTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskTypesCompleted(this, new GetTaskTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/GetTaskIntervals", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetTaskIntervals() {
            object[] results = this.Invoke("GetTaskIntervals", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskIntervalsAsync() {
            this.GetTaskIntervalsAsync(null);
        }
        
        /// <remarks/>
        public void GetTaskIntervalsAsync(object userState) {
            if ((this.GetTaskIntervalsOperationCompleted == null)) {
                this.GetTaskIntervalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskIntervalsOperationCompleted);
            }
            this.InvokeAsync("GetTaskIntervals", new object[0], this.GetTaskIntervalsOperationCompleted, userState);
        }
        
        private void OnGetTaskIntervalsOperationCompleted(object arg) {
            if ((this.GetTaskIntervalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskIntervalsCompleted(this, new GetTaskIntervalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/GetTasks", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task[] GetTasks(TaskInformation additionalTaskInfo) {
            object[] results = this.Invoke("GetTasks", new object[] {
                        additionalTaskInfo});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksAsync(TaskInformation additionalTaskInfo) {
            this.GetTasksAsync(additionalTaskInfo, null);
        }
        
        /// <remarks/>
        public void GetTasksAsync(TaskInformation additionalTaskInfo, object userState) {
            if ((this.GetTasksOperationCompleted == null)) {
                this.GetTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksOperationCompleted);
            }
            this.InvokeAsync("GetTasks", new object[] {
                        additionalTaskInfo}, this.GetTasksOperationCompleted, userState);
        }
        
        private void OnGetTasksOperationCompleted(object arg) {
            if ((this.GetTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksCompleted(this, new GetTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/GetTask", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task GetTask(System.Guid id, TaskInformation additionalTaskInfo) {
            object[] results = this.Invoke("GetTask", new object[] {
                        id,
                        additionalTaskInfo});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskAsync(System.Guid id, TaskInformation additionalTaskInfo) {
            this.GetTaskAsync(id, additionalTaskInfo, null);
        }
        
        /// <remarks/>
        public void GetTaskAsync(System.Guid id, TaskInformation additionalTaskInfo, object userState) {
            if ((this.GetTaskOperationCompleted == null)) {
                this.GetTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskOperationCompleted);
            }
            this.InvokeAsync("GetTask", new object[] {
                        id,
                        additionalTaskInfo}, this.GetTaskOperationCompleted, userState);
        }
        
        private void OnGetTaskOperationCompleted(object arg) {
            if ((this.GetTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCompleted(this, new GetTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/GetTasksByFilter", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task[] GetTasksByFilter(TaskFilter filter, TaskInformation additionalTaskInfo) {
            object[] results = this.Invoke("GetTasksByFilter", new object[] {
                        filter,
                        additionalTaskInfo});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTasksByFilterAsync(TaskFilter filter, TaskInformation additionalTaskInfo) {
            this.GetTasksByFilterAsync(filter, additionalTaskInfo, null);
        }
        
        /// <remarks/>
        public void GetTasksByFilterAsync(TaskFilter filter, TaskInformation additionalTaskInfo, object userState) {
            if ((this.GetTasksByFilterOperationCompleted == null)) {
                this.GetTasksByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTasksByFilterOperationCompleted);
            }
            this.InvokeAsync("GetTasksByFilter", new object[] {
                        filter,
                        additionalTaskInfo}, this.GetTasksByFilterOperationCompleted, userState);
        }
        
        private void OnGetTasksByFilterOperationCompleted(object arg) {
            if ((this.GetTasksByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTasksByFilterCompleted(this, new GetTasksByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/CreateTask", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task CreateTask(TaskEditableData taskData) {
            object[] results = this.Invoke("CreateTask", new object[] {
                        taskData});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTaskAsync(TaskEditableData taskData) {
            this.CreateTaskAsync(taskData, null);
        }
        
        /// <remarks/>
        public void CreateTaskAsync(TaskEditableData taskData, object userState) {
            if ((this.CreateTaskOperationCompleted == null)) {
                this.CreateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTaskOperationCompleted);
            }
            this.InvokeAsync("CreateTask", new object[] {
                        taskData}, this.CreateTaskOperationCompleted, userState);
        }
        
        private void OnCreateTaskOperationCompleted(object arg) {
            if ((this.CreateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTaskCompleted(this, new CreateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/CreateTasks", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchTaskOperationResult CreateTasks(TaskEditableData[] taskData, bool returnBadFormatedData) {
            object[] results = this.Invoke("CreateTasks", new object[] {
                        taskData,
                        returnBadFormatedData});
            return ((BatchTaskOperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTasksAsync(TaskEditableData[] taskData, bool returnBadFormatedData) {
            this.CreateTasksAsync(taskData, returnBadFormatedData, null);
        }
        
        /// <remarks/>
        public void CreateTasksAsync(TaskEditableData[] taskData, bool returnBadFormatedData, object userState) {
            if ((this.CreateTasksOperationCompleted == null)) {
                this.CreateTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTasksOperationCompleted);
            }
            this.InvokeAsync("CreateTasks", new object[] {
                        taskData,
                        returnBadFormatedData}, this.CreateTasksOperationCompleted, userState);
        }
        
        private void OnCreateTasksOperationCompleted(object arg) {
            if ((this.CreateTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTasksCompleted(this, new CreateTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/UpdateTasksByFilter", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task[] UpdateTasksByFilter(TaskFilter filter, TaskEditableData taskData) {
            object[] results = this.Invoke("UpdateTasksByFilter", new object[] {
                        filter,
                        taskData});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTasksByFilterAsync(TaskFilter filter, TaskEditableData taskData) {
            this.UpdateTasksByFilterAsync(filter, taskData, null);
        }
        
        /// <remarks/>
        public void UpdateTasksByFilterAsync(TaskFilter filter, TaskEditableData taskData, object userState) {
            if ((this.UpdateTasksByFilterOperationCompleted == null)) {
                this.UpdateTasksByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTasksByFilterOperationCompleted);
            }
            this.InvokeAsync("UpdateTasksByFilter", new object[] {
                        filter,
                        taskData}, this.UpdateTasksByFilterOperationCompleted, userState);
        }
        
        private void OnUpdateTasksByFilterOperationCompleted(object arg) {
            if ((this.UpdateTasksByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTasksByFilterCompleted(this, new UpdateTasksByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/UpdateTask", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task UpdateTask(System.Guid id, TaskEditableData taskData) {
            object[] results = this.Invoke("UpdateTask", new object[] {
                        id,
                        taskData});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(System.Guid id, TaskEditableData taskData) {
            this.UpdateTaskAsync(id, taskData, null);
        }
        
        /// <remarks/>
        public void UpdateTaskAsync(System.Guid id, TaskEditableData taskData, object userState) {
            if ((this.UpdateTaskOperationCompleted == null)) {
                this.UpdateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskOperationCompleted);
            }
            this.InvokeAsync("UpdateTask", new object[] {
                        id,
                        taskData}, this.UpdateTaskOperationCompleted, userState);
        }
        
        private void OnUpdateTaskOperationCompleted(object arg) {
            if ((this.UpdateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskCompleted(this, new UpdateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/UpdateTasks", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchTaskOperationResult UpdateTasks(TaskEditableData[] taskData, bool returnBadFormatedData) {
            object[] results = this.Invoke("UpdateTasks", new object[] {
                        taskData,
                        returnBadFormatedData});
            return ((BatchTaskOperationResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTasksAsync(TaskEditableData[] taskData, bool returnBadFormatedData) {
            this.UpdateTasksAsync(taskData, returnBadFormatedData, null);
        }
        
        /// <remarks/>
        public void UpdateTasksAsync(TaskEditableData[] taskData, bool returnBadFormatedData, object userState) {
            if ((this.UpdateTasksOperationCompleted == null)) {
                this.UpdateTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTasksOperationCompleted);
            }
            this.InvokeAsync("UpdateTasks", new object[] {
                        taskData,
                        returnBadFormatedData}, this.UpdateTasksOperationCompleted, userState);
        }
        
        private void OnUpdateTasksOperationCompleted(object arg) {
            if ((this.UpdateTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTasksCompleted(this, new UpdateTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/DeleteTask", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task DeleteTask(System.Guid id) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        id});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(System.Guid id) {
            this.DeleteTaskAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(System.Guid id, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        id}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/DeleteTasks", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task[] DeleteTasks(System.Guid[] ids) {
            object[] results = this.Invoke("DeleteTasks", new object[] {
                        ids});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTasksAsync(System.Guid[] ids) {
            this.DeleteTasksAsync(ids, null);
        }
        
        /// <remarks/>
        public void DeleteTasksAsync(System.Guid[] ids, object userState) {
            if ((this.DeleteTasksOperationCompleted == null)) {
                this.DeleteTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTasksOperationCompleted);
            }
            this.InvokeAsync("DeleteTasks", new object[] {
                        ids}, this.DeleteTasksOperationCompleted, userState);
        }
        
        private void OnDeleteTasksOperationCompleted(object arg) {
            if ((this.DeleteTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTasksCompleted(this, new DeleteTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.host-tracker.com/Services/DeleteTasksByFilter", RequestNamespace="http://www.host-tracker.com/Services", ResponseNamespace="http://www.host-tracker.com/Services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Task[] DeleteTasksByFilter(TaskFilter filter) {
            object[] results = this.Invoke("DeleteTasksByFilter", new object[] {
                        filter});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTasksByFilterAsync(TaskFilter filter) {
            this.DeleteTasksByFilterAsync(filter, null);
        }
        
        /// <remarks/>
        public void DeleteTasksByFilterAsync(TaskFilter filter, object userState) {
            if ((this.DeleteTasksByFilterOperationCompleted == null)) {
                this.DeleteTasksByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTasksByFilterOperationCompleted);
            }
            this.InvokeAsync("DeleteTasksByFilter", new object[] {
                        filter}, this.DeleteTasksByFilterOperationCompleted, userState);
        }
        
        private void OnDeleteTasksByFilterOperationCompleted(object arg) {
            if ((this.DeleteTasksByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTasksByFilterCompleted(this, new DeleteTasksByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.host-tracker.com/Services", IsNullable=false)]
    public partial class AuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string loginField;
        
        private string passwordField;
        
        private string ticketField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class BadTaskEditableData {
        
        private int indexField;
        
        private System.Nullable<System.Guid> taskIdField;
        
        private string codeField;
        
        private string messageField;
        
        /// <remarks/>
        public int index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> taskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class BatchTaskOperationResult {
        
        private Task[] tasksField;
        
        private BadTaskEditableData[] badTaskEditableDataField;
        
        /// <remarks/>
        public Task[] tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
        
        /// <remarks/>
        public BadTaskEditableData[] badTaskEditableData {
            get {
                return this.badTaskEditableDataField;
            }
            set {
                this.badTaskEditableDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SnmpTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UrlTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PingTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PortTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CounterTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpTask))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class Task {
        
        private System.Guid idField;
        
        private string nameField;
        
        private System.DateTime creationTimeField;
        
        private string taskTypeField;
        
        private bool enabledField;
        
        private int intervalField;
        
        private System.DateTime upFromTimeField;
        
        private bool lastStateField;
        
        private System.DateTime lastStateChangeTimeField;
        
        private bool openStatEnabledField;
        
        private bool fullLogEnabledField;
        
        private string disablenceReasonField;
        
        private System.Nullable<System.DateTime> disablenceTimeField;
        
        private bool holdResultsField;
        
        private bool agentStatField;
        
        private string[] billingOverlimitsField;
        
        private string[] tagsField;
        
        private Subscription[] subscriptionsField;
        
        private TaskStats statsField;
        
        private string[] agentPoolsField;
        
        private bool deletedField;
        
        private DnsBlackListCheck dnsblField;
        
        /// <remarks/>
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime creationTime {
            get {
                return this.creationTimeField;
            }
            set {
                this.creationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public int interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime upFromTime {
            get {
                return this.upFromTimeField;
            }
            set {
                this.upFromTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool lastState {
            get {
                return this.lastStateField;
            }
            set {
                this.lastStateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastStateChangeTime {
            get {
                return this.lastStateChangeTimeField;
            }
            set {
                this.lastStateChangeTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool openStatEnabled {
            get {
                return this.openStatEnabledField;
            }
            set {
                this.openStatEnabledField = value;
            }
        }
        
        /// <remarks/>
        public bool fullLogEnabled {
            get {
                return this.fullLogEnabledField;
            }
            set {
                this.fullLogEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string disablenceReason {
            get {
                return this.disablenceReasonField;
            }
            set {
                this.disablenceReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> disablenceTime {
            get {
                return this.disablenceTimeField;
            }
            set {
                this.disablenceTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool holdResults {
            get {
                return this.holdResultsField;
            }
            set {
                this.holdResultsField = value;
            }
        }
        
        /// <remarks/>
        public bool agentStat {
            get {
                return this.agentStatField;
            }
            set {
                this.agentStatField = value;
            }
        }
        
        /// <remarks/>
        public string[] billingOverlimits {
            get {
                return this.billingOverlimitsField;
            }
            set {
                this.billingOverlimitsField = value;
            }
        }
        
        /// <remarks/>
        public string[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public Subscription[] subscriptions {
            get {
                return this.subscriptionsField;
            }
            set {
                this.subscriptionsField = value;
            }
        }
        
        /// <remarks/>
        public TaskStats stats {
            get {
                return this.statsField;
            }
            set {
                this.statsField = value;
            }
        }
        
        /// <remarks/>
        public string[] agentPools {
            get {
                return this.agentPoolsField;
            }
            set {
                this.agentPoolsField = value;
            }
        }
        
        /// <remarks/>
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public DnsBlackListCheck dnsbl {
            get {
                return this.dnsblField;
            }
            set {
                this.dnsblField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class Subscription {
        
        private string[] alertTypesField;
        
        private string[] reportTypesField;
        
        private System.Guid[] taskIdsField;
        
        private System.Guid[] contactIdsField;
        
        /// <remarks/>
        public string[] alertTypes {
            get {
                return this.alertTypesField;
            }
            set {
                this.alertTypesField = value;
            }
        }
        
        /// <remarks/>
        public string[] reportTypes {
            get {
                return this.reportTypesField;
            }
            set {
                this.reportTypesField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] taskIds {
            get {
                return this.taskIdsField;
            }
            set {
                this.taskIdsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] contactIds {
            get {
                return this.contactIdsField;
            }
            set {
                this.contactIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class TaskStats {
        
        private double dailyField;
        
        private double monthlyField;
        
        private double yearlyField;
        
        private double totalField;
        
        /// <remarks/>
        public double daily {
            get {
                return this.dailyField;
            }
            set {
                this.dailyField = value;
            }
        }
        
        /// <remarks/>
        public double monthly {
            get {
                return this.monthlyField;
            }
            set {
                this.monthlyField = value;
            }
        }
        
        /// <remarks/>
        public double yearly {
            get {
                return this.yearlyField;
            }
            set {
                this.yearlyField = value;
            }
        }
        
        /// <remarks/>
        public double total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class DnsBlackListCheck {
        
        private System.DateTime lastCheckedField;
        
        private int intervalField;
        
        private bool lastStateField;
        
        private System.DateTime lastStateChangeTimeField;
        
        /// <remarks/>
        public System.DateTime lastChecked {
            get {
                return this.lastCheckedField;
            }
            set {
                this.lastCheckedField = value;
            }
        }
        
        /// <remarks/>
        public int interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public bool lastState {
            get {
                return this.lastStateField;
            }
            set {
                this.lastStateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastStateChangeTime {
            get {
                return this.lastStateChangeTimeField;
            }
            set {
                this.lastStateChangeTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class DatabaseTask : Task {
        
        private string serverTypeField;
        
        private string serverField;
        
        private int serverPortField;
        
        private string serviceField;
        
        private string databaseField;
        
        private string loginField;
        
        private string passwordField;
        
        private string queryField;
        
        private string queryModeField;
        
        private string comparisonModeField;
        
        private string value1Field;
        
        private string value2Field;
        
        private bool includeValue1Field;
        
        private bool includeValue2Field;
        
        /// <remarks/>
        public string serverType {
            get {
                return this.serverTypeField;
            }
            set {
                this.serverTypeField = value;
            }
        }
        
        /// <remarks/>
        public string server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public int serverPort {
            get {
                return this.serverPortField;
            }
            set {
                this.serverPortField = value;
            }
        }
        
        /// <remarks/>
        public string service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public string database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
        
        /// <remarks/>
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public string queryMode {
            get {
                return this.queryModeField;
            }
            set {
                this.queryModeField = value;
            }
        }
        
        /// <remarks/>
        public string comparisonMode {
            get {
                return this.comparisonModeField;
            }
            set {
                this.comparisonModeField = value;
            }
        }
        
        /// <remarks/>
        public string value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
            }
        }
        
        /// <remarks/>
        public string value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
            }
        }
        
        /// <remarks/>
        public bool includeValue1 {
            get {
                return this.includeValue1Field;
            }
            set {
                this.includeValue1Field = value;
            }
        }
        
        /// <remarks/>
        public bool includeValue2 {
            get {
                return this.includeValue2Field;
            }
            set {
                this.includeValue2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class SnmpTask : Task {
        
        private string hostField;
        
        private string communityField;
        
        private byte snmpVersionField;
        
        private string oidField;
        
        private int portField;
        
        private int retriesField;
        
        private string snmpMethodField;
        
        /// <remarks/>
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        public string community {
            get {
                return this.communityField;
            }
            set {
                this.communityField = value;
            }
        }
        
        /// <remarks/>
        public byte snmpVersion {
            get {
                return this.snmpVersionField;
            }
            set {
                this.snmpVersionField = value;
            }
        }
        
        /// <remarks/>
        public string oid {
            get {
                return this.oidField;
            }
            set {
                this.oidField = value;
            }
        }
        
        /// <remarks/>
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public int retries {
            get {
                return this.retriesField;
            }
            set {
                this.retriesField = value;
            }
        }
        
        /// <remarks/>
        public string snmpMethod {
            get {
                return this.snmpMethodField;
            }
            set {
                this.snmpMethodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PingTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PortTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CounterTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpTask))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class UrlTask : Task {
        
        private string urlField;
        
        private bool checkDnsblField;
        
        private string rawUrlField;
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public bool checkDnsbl {
            get {
                return this.checkDnsblField;
            }
            set {
                this.checkDnsblField = value;
            }
        }
        
        /// <remarks/>
        public string rawUrl {
            get {
                return this.rawUrlField;
            }
            set {
                this.rawUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class PingTask : UrlTask {
        
        private int delayField;
        
        private byte quantityField;
        
        /// <remarks/>
        public int delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
            }
        }
        
        /// <remarks/>
        public byte quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class PortTask : UrlTask {
        
        private string protocolField;
        
        private string patternField;
        
        /// <remarks/>
        public string protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <remarks/>
        public string pattern {
            get {
                return this.patternField;
            }
            set {
                this.patternField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class CounterTask : UrlTask {
        
        private string counterNameField;
        
        private string monitorTypeField;
        
        private string deploymentTypeField;
        
        private string counterTypeField;
        
        private System.Nullable<double> errorLevel1Field;
        
        private System.Nullable<double> errorLevel2Field;
        
        private string errorConditionField;
        
        private int errorCheckCountField;
        
        private string ftpField;
        
        private string ftpLoginField;
        
        private string ftpPasswordField;
        
        private CounterQuery queryField;
        
        /// <remarks/>
        public string counterName {
            get {
                return this.counterNameField;
            }
            set {
                this.counterNameField = value;
            }
        }
        
        /// <remarks/>
        public string monitorType {
            get {
                return this.monitorTypeField;
            }
            set {
                this.monitorTypeField = value;
            }
        }
        
        /// <remarks/>
        public string deploymentType {
            get {
                return this.deploymentTypeField;
            }
            set {
                this.deploymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string counterType {
            get {
                return this.counterTypeField;
            }
            set {
                this.counterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> errorLevel1 {
            get {
                return this.errorLevel1Field;
            }
            set {
                this.errorLevel1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> errorLevel2 {
            get {
                return this.errorLevel2Field;
            }
            set {
                this.errorLevel2Field = value;
            }
        }
        
        /// <remarks/>
        public string errorCondition {
            get {
                return this.errorConditionField;
            }
            set {
                this.errorConditionField = value;
            }
        }
        
        /// <remarks/>
        public int errorCheckCount {
            get {
                return this.errorCheckCountField;
            }
            set {
                this.errorCheckCountField = value;
            }
        }
        
        /// <remarks/>
        public string ftp {
            get {
                return this.ftpField;
            }
            set {
                this.ftpField = value;
            }
        }
        
        /// <remarks/>
        public string ftpLogin {
            get {
                return this.ftpLoginField;
            }
            set {
                this.ftpLoginField = value;
            }
        }
        
        /// <remarks/>
        public string ftpPassword {
            get {
                return this.ftpPasswordField;
            }
            set {
                this.ftpPasswordField = value;
            }
        }
        
        /// <remarks/>
        public CounterQuery query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class CounterQuery {
        
        private string counterTypeField;
        
        private string diskLabelOrFileSystemField;
        
        private string socketAddressField;
        
        private int socketPortField;
        
        private string dbConnectionStringField;
        
        private string perfCounterCategoryField;
        
        private string perfCounterNameField;
        
        private string perfCounterInstanceField;
        
        public CounterQuery() {
            this.diskLabelOrFileSystemField = "";
            this.socketAddressField = "";
            this.socketPortField = 80;
            this.dbConnectionStringField = "";
            this.perfCounterCategoryField = "";
            this.perfCounterNameField = "";
            this.perfCounterInstanceField = "";
        }
        
        /// <remarks/>
        public string counterType {
            get {
                return this.counterTypeField;
            }
            set {
                this.counterTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string diskLabelOrFileSystem {
            get {
                return this.diskLabelOrFileSystemField;
            }
            set {
                this.diskLabelOrFileSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string socketAddress {
            get {
                return this.socketAddressField;
            }
            set {
                this.socketAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(80)]
        public int socketPort {
            get {
                return this.socketPortField;
            }
            set {
                this.socketPortField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string dbConnectionString {
            get {
                return this.dbConnectionStringField;
            }
            set {
                this.dbConnectionStringField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string perfCounterCategory {
            get {
                return this.perfCounterCategoryField;
            }
            set {
                this.perfCounterCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string perfCounterName {
            get {
                return this.perfCounterNameField;
            }
            set {
                this.perfCounterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string perfCounterInstance {
            get {
                return this.perfCounterInstanceField;
            }
            set {
                this.perfCounterInstanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class HttpTask : UrlTask {
        
        private string httpMethodField;
        
        private string userAgentField;
        
        private string refererField;
        
        private string acceptHeaderField;
        
        private string[] keywordsField;
        
        private string keywordModeField;
        
        private int maxResponsePageSizeField;
        
        private int timeoutField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string postParametersField;
        
        private string httpHeadersField;
        
        private string httpBodyField;
        
        private bool followRedirectField;
        
        private bool checkCertificateExpirationField;
        
        private bool checkDomainExpirationField;
        
        private int[] ignoredStatusesField;
        
        /// <remarks/>
        public string httpMethod {
            get {
                return this.httpMethodField;
            }
            set {
                this.httpMethodField = value;
            }
        }
        
        /// <remarks/>
        public string userAgent {
            get {
                return this.userAgentField;
            }
            set {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        public string referer {
            get {
                return this.refererField;
            }
            set {
                this.refererField = value;
            }
        }
        
        /// <remarks/>
        public string acceptHeader {
            get {
                return this.acceptHeaderField;
            }
            set {
                this.acceptHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public string keywordMode {
            get {
                return this.keywordModeField;
            }
            set {
                this.keywordModeField = value;
            }
        }
        
        /// <remarks/>
        public int maxResponsePageSize {
            get {
                return this.maxResponsePageSizeField;
            }
            set {
                this.maxResponsePageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string postParameters {
            get {
                return this.postParametersField;
            }
            set {
                this.postParametersField = value;
            }
        }
        
        /// <remarks/>
        public string httpHeaders {
            get {
                return this.httpHeadersField;
            }
            set {
                this.httpHeadersField = value;
            }
        }
        
        /// <remarks/>
        public string httpBody {
            get {
                return this.httpBodyField;
            }
            set {
                this.httpBodyField = value;
            }
        }
        
        /// <remarks/>
        public bool followRedirect {
            get {
                return this.followRedirectField;
            }
            set {
                this.followRedirectField = value;
            }
        }
        
        /// <remarks/>
        public bool checkCertificateExpiration {
            get {
                return this.checkCertificateExpirationField;
            }
            set {
                this.checkCertificateExpirationField = value;
            }
        }
        
        /// <remarks/>
        public bool checkDomainExpiration {
            get {
                return this.checkDomainExpirationField;
            }
            set {
                this.checkDomainExpirationField = value;
            }
        }
        
        /// <remarks/>
        public int[] ignoredStatuses {
            get {
                return this.ignoredStatusesField;
            }
            set {
                this.ignoredStatusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UrlTaskEditableData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PingTaskEditableData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PortTaskEditableData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpTaskEditableData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class TaskEditableData {
        
        private System.Nullable<System.Guid> idField;
        
        private System.Nullable<bool> enabledField;
        
        private int intervalField;
        
        private string nameField;
        
        private System.Nullable<bool> fullLogField;
        
        private System.Nullable<bool> openStatField;
        
        private string[] tagsField;
        
        private string[] agentPoolsField;
        
        private Subscription[] subscriptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        public int interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> fullLog {
            get {
                return this.fullLogField;
            }
            set {
                this.fullLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> openStat {
            get {
                return this.openStatField;
            }
            set {
                this.openStatField = value;
            }
        }
        
        /// <remarks/>
        public string[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        public string[] agentPools {
            get {
                return this.agentPoolsField;
            }
            set {
                this.agentPoolsField = value;
            }
        }
        
        /// <remarks/>
        public Subscription[] subscriptions {
            get {
                return this.subscriptionsField;
            }
            set {
                this.subscriptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PingTaskEditableData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PortTaskEditableData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HttpTaskEditableData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public abstract partial class UrlTaskEditableData : TaskEditableData {
        
        private System.Nullable<bool> checkDnsblField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> checkDnsbl {
            get {
                return this.checkDnsblField;
            }
            set {
                this.checkDnsblField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class PingTaskEditableData : UrlTaskEditableData {
        
        private string hostField;
        
        /// <remarks/>
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class PortTaskEditableData : UrlTaskEditableData {
        
        private string hostField;
        
        private System.Nullable<int> portField;
        
        /// <remarks/>
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class HttpTaskEditableData : UrlTaskEditableData {
        
        private string urlField;
        
        private string httpMethodField;
        
        private string userAgentField;
        
        private string refererField;
        
        private string acceptHeaderField;
        
        private string[] keywordsField;
        
        private string keywordModeField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string postParametersField;
        
        private string httpBodyField;
        
        private string httpHeadersField;
        
        private int[] ignoredStatusesField;
        
        private System.Nullable<bool> followRedirectField;
        
        private System.Nullable<bool> checkDomainExpirationField;
        
        private System.Nullable<bool> checkCertificateExpirationField;
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string httpMethod {
            get {
                return this.httpMethodField;
            }
            set {
                this.httpMethodField = value;
            }
        }
        
        /// <remarks/>
        public string userAgent {
            get {
                return this.userAgentField;
            }
            set {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        public string referer {
            get {
                return this.refererField;
            }
            set {
                this.refererField = value;
            }
        }
        
        /// <remarks/>
        public string acceptHeader {
            get {
                return this.acceptHeaderField;
            }
            set {
                this.acceptHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string[] keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public string keywordMode {
            get {
                return this.keywordModeField;
            }
            set {
                this.keywordModeField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string postParameters {
            get {
                return this.postParametersField;
            }
            set {
                this.postParametersField = value;
            }
        }
        
        /// <remarks/>
        public string httpBody {
            get {
                return this.httpBodyField;
            }
            set {
                this.httpBodyField = value;
            }
        }
        
        /// <remarks/>
        public string httpHeaders {
            get {
                return this.httpHeadersField;
            }
            set {
                this.httpHeadersField = value;
            }
        }
        
        /// <remarks/>
        public int[] ignoredStatuses {
            get {
                return this.ignoredStatusesField;
            }
            set {
                this.ignoredStatusesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> followRedirect {
            get {
                return this.followRedirectField;
            }
            set {
                this.followRedirectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> checkDomainExpiration {
            get {
                return this.checkDomainExpirationField;
            }
            set {
                this.checkDomainExpirationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> checkCertificateExpiration {
            get {
                return this.checkCertificateExpirationField;
            }
            set {
                this.checkCertificateExpirationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public partial class TaskFilter {
        
        private System.Nullable<System.Guid> idField;
        
        private System.Guid[] idsField;
        
        private System.Nullable<bool> excludeIdsField;
        
        private string taskTypeField;
        
        private string[] taskTypesField;
        
        private System.Nullable<bool> excludeTaskTypesField;
        
        private string statusField;
        
        private string urlField;
        
        private string[] urlsField;
        
        private System.Nullable<bool> urlSearchLikeField;
        
        private System.Nullable<bool> excludeUrlsField;
        
        private string nameField;
        
        private string[] namesField;
        
        private System.Nullable<bool> nameSearchLikeField;
        
        private System.Nullable<bool> excludeNamesField;
        
        private System.Nullable<int> intervalField;
        
        private int[] intervalsField;
        
        private System.Nullable<bool> excludeIntervalsField;
        
        private System.Nullable<bool> openStatField;
        
        private System.Nullable<bool> lastStateField;
        
        private string[] tagsField;
        
        private System.Nullable<bool> overlimitedField;
        
        private System.Nullable<bool> activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] ids {
            get {
                return this.idsField;
            }
            set {
                this.idsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeIds {
            get {
                return this.excludeIdsField;
            }
            set {
                this.excludeIdsField = value;
            }
        }
        
        /// <remarks/>
        public string taskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
        
        /// <remarks/>
        public string[] taskTypes {
            get {
                return this.taskTypesField;
            }
            set {
                this.taskTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeTaskTypes {
            get {
                return this.excludeTaskTypesField;
            }
            set {
                this.excludeTaskTypesField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string[] urls {
            get {
                return this.urlsField;
            }
            set {
                this.urlsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> urlSearchLike {
            get {
                return this.urlSearchLikeField;
            }
            set {
                this.urlSearchLikeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeUrls {
            get {
                return this.excludeUrlsField;
            }
            set {
                this.excludeUrlsField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string[] names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> nameSearchLike {
            get {
                return this.nameSearchLikeField;
            }
            set {
                this.nameSearchLikeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeNames {
            get {
                return this.excludeNamesField;
            }
            set {
                this.excludeNamesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public int[] intervals {
            get {
                return this.intervalsField;
            }
            set {
                this.intervalsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeIntervals {
            get {
                return this.excludeIntervalsField;
            }
            set {
                this.excludeIntervalsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> openStat {
            get {
                return this.openStatField;
            }
            set {
                this.openStatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> lastState {
            get {
                return this.lastStateField;
            }
            set {
                this.lastStateField = value;
            }
        }
        
        /// <remarks/>
        public string[] tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> overlimited {
            get {
                return this.overlimitedField;
            }
            set {
                this.overlimitedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.host-tracker.com/Services")]
    public enum TaskInformation {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Subscriptions = 2,
        
        /// <remarks/>
        Stats = 4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskTypesCompletedEventHandler(object sender, GetTaskTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskIntervalsCompletedEventHandler(object sender, GetTaskIntervalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskIntervalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskIntervalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTasksCompletedEventHandler(object sender, GetTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskCompletedEventHandler(object sender, GetTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTasksByFilterCompletedEventHandler(object sender, GetTasksByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTasksByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTasksByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateTaskCompletedEventHandler(object sender, CreateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateTasksCompletedEventHandler(object sender, CreateTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchTaskOperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchTaskOperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTasksByFilterCompletedEventHandler(object sender, UpdateTasksByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTasksByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTasksByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTaskCompletedEventHandler(object sender, UpdateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTasksCompletedEventHandler(object sender, UpdateTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchTaskOperationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchTaskOperationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTaskCompletedEventHandler(object sender, DeleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTasksCompletedEventHandler(object sender, DeleteTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTasksByFilterCompletedEventHandler(object sender, DeleteTasksByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTasksByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTasksByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591